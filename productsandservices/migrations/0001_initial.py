# Generated by Django 4.1.12 on 2024-04-03 21:36

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("coreApp", "0002_alter_entreprise_adresse_and_more"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Categorie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Pack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Produit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reference",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "code_barre",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "designation",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Désignation"
                    ),
                ),
                (
                    "pays_dorigine",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Pays d'origine",
                    ),
                ),
                (
                    "stock",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Quantité sur stock"
                    ),
                ),
                ("emplacement", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "sur_catalog",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "prix_1",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Prix de Vente HT"
                    ),
                ),
                (
                    "prix_ttc_1",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Prix de Vente TTC",
                    ),
                ),
                (
                    "prix_2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Prix de Vente-2 HT",
                    ),
                ),
                (
                    "prix_ttc_2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Prix de Vente TTC-2",
                    ),
                ),
                (
                    "prix_3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Prix de Vente-3 HT",
                    ),
                ),
                (
                    "prix_ttc_3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Prix de Vente TTC-3",
                    ),
                ),
                (
                    "prix_achat_net",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Prix d'achat HT"
                    ),
                ),
                (
                    "prix_achat_net_ttc",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Prix d'achat TTC"
                    ),
                ),
                (
                    "prix_achat_brut",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "prix_achat_brut_ttc",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "image_produit",
                    models.ImageField(
                        blank=True,
                        default="produit/default_product.jpg",
                        null=True,
                        upload_to="produit/",
                    ),
                ),
                (
                    "tva_pourcentage",
                    models.PositiveIntegerField(default=20, verbose_name="TVA (%)"),
                ),
                (
                    "largeur",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "longueur",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "epaisseur",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "unite_vente",
                    models.CharField(
                        choices=[
                            ("Kilogram", "Kg"),
                            ("Gram", "g"),
                            ("Pound", "lb"),
                            ("Ounce", "oz"),
                            ("Liter", "l"),
                            ("Milliliter", "ml"),
                            ("Gallon", "gal"),
                            ("Quart", "qt"),
                            ("Pack", "pack"),
                            ("Box", "box"),
                            ("Unit", "U"),
                            ("Other", "autre"),
                        ],
                        default="Unit",
                        max_length=20,
                        verbose_name="Unité de vente",
                    ),
                ),
                ("marque", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "couleur",
                    models.CharField(
                        blank=True, default="#7F00FF", max_length=50, null=True
                    ),
                ),
                ("taille", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "categorie",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="productsandservices.categorie",
                    ),
                ),
                (
                    "entreprise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="produits",
                        to="coreApp.entreprise",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Remise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_remise",
                    models.CharField(
                        choices=[("P", "Pourcentage"), ("F", "Valeur Fixe")],
                        max_length=1,
                    ),
                ),
                ("value", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name="SousCategorie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=50, unique=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="productsandservices.categorie",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reference",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("designation", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "prix_1",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Frais du service (Prix Principal)",
                    ),
                ),
                (
                    "prix_2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "prix_3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "tva_pourcentage",
                    models.PositiveIntegerField(default=20, verbose_name="TVA (%)"),
                ),
                (
                    "prix_ttc_1",
                    models.DecimalField(
                        decimal_places=2, default=0.0, editable=False, max_digits=10
                    ),
                ),
                (
                    "prix_ttc_2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "prix_ttc_3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "remise",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "entreprise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="coreApp.entreprise",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Promotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=50, unique=True)),
                ("taux_reduction", models.DecimalField(decimal_places=2, max_digits=5)),
                ("date_debut", models.DateField()),
                ("date_fin", models.DateField()),
                (
                    "pack",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="productsandservices.pack",
                    ),
                ),
                (
                    "produit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="productsandservices.produit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Promotion",
                "verbose_name_plural": "Promotions",
            },
        ),
        migrations.AddField(
            model_name="produit",
            name="remise_achat",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="productsandservices.remise",
            ),
        ),
        migrations.AddField(
            model_name="produit",
            name="sous_categorie",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="productsandservices.souscategorie",
            ),
        ),
        migrations.AddField(
            model_name="produit",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.CreateModel(
            name="PackProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="Quantité")),
                (
                    "pack",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="productsandservices.pack",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="productsandservices.produit",
                        verbose_name="Produit",
                    ),
                ),
            ],
        ),
    ]
